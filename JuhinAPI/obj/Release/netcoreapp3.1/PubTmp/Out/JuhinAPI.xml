<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JuhinAPI</name>
    </assembly>
    <members>
        <member name="M:JuhinAPI.Controllers.AccountsController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Shows the list of all users (with pagination)
            </summary>
            <param name="paginationDTO">Sets the maximum records per page and the page numberr to show</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.GetRoles">
            <summary>
            Shows all available roles in system
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.AssignRole(JuhinAPI.DTOs.EditRoleDTO)">
            <summary>
            Assigns the user Role in system (Admin, Specialist, ..)
            </summary>
            <param name="editRoleDTO"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.GetUserInfo">
            <summary>
            Gets current user info
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.RemoveRole(JuhinAPI.DTOs.EditRoleDTO)">
            <summary>
            Removes the user Role in system (Roles: Admin)
            </summary>
            <param name="editRoleDTO"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.CreateUser(JuhinAPI.DTOs.UserInfo)">
            <summary>
            Create a user account with email address and password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.ResetPassword(JuhinAPI.DTOs.UserResetInfo)">
            <summary>
            Resets the password / for testing only / to be removed
            </summary>
            <param name="userResetInfo"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.Login(JuhinAPI.DTOs.UserInfo)">
            <summary>
            Login action (returns JwtBearer token)
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.Logout">
            <summary>
            Logout current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.AccountsController.Renew">
            <summary>
            Action to renew the token (to be used at client side)
            </summary>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.CurrencyController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Shows all available currency records
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.CurrencyController.Get(System.Int32)">
            <summary>
            Gets the currency by Id
            </summary>
            <param name="id">The Id of the currency</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.CurrencyController.Post(JuhinAPI.DTOs.CurrencyCreationDTO)">
            <summary>
            Adds new currency to database
            </summary>
            <param name="newCurrency"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.CurrencyController.Put(System.Int32,JuhinAPI.DTOs.CurrencyCreationDTO)">
            <summary>
            Edits the currency record with requested Id
            </summary>
            <param name="id">The Id of the requested currency</param>
            <param name="updatedCurrency">Currency data. Example name: American dollar, code: USD, valuePLN: 3952 (value * 1000)</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.CurrencyController.Delete(System.Int32)">
            <summary>
            Deletes the currency record with requested Id
            </summary>
            <param name="id">Requested currency Id</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets all deliveries records from database
            </summary>
            <param name="pagination">(Page - page number to show / RecordsPerPage - How many records to show in one page.)</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetByOrderId(System.Guid)">
            <summary>
            Gets all deliveries records from database
            </summary>
            <param name="orderId">Purchase order Id</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetUpcomingDeliveries(System.DateTime)">
            <summary>
            Shows only upcoming deliveries for next week (7 days) from today 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetDeliveriesByDates(System.DateTime,System.DateTime)">
            <summary>
            Shows deliveries between two dates 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetFiltered(JuhinAPI.DTOs.FilterDeliveriesDTO)">
            <summary>
            Shows the deliveries after filtering by ETAdate, 
            OrderNumber or PartNumber. Displayed in ascending order by ETADate.
            </summary>
            <param name="filterDeliveriesDTO"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetSearchedDeliveries(JuhinAPI.DTOs.SearchDeliveriesDTO)">
            <summary>
            Finds deliveries by given data: 
            order number, part number or description, vendor name, ETA date, status (by id). Displayed in ascending order by ETADate.
            </summary>
            <param name="searchDeliveriesDTO"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetDeliveryById(System.Guid)">
            <summary>
            Gets the delivery data requested by Id
            </summary>
            <param name="id">Requested Id of delivery record</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.GetDeliveryByIdDetailed(System.Guid)">
            <summary>
            Gets detailed delivery data requested by Id
            </summary>
            <param name="deliveryId">Requested delivery Id </param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.Post(System.Guid,JuhinAPI.DTOs.DeliveryCreationDTO)">
            <summary>
            Creates new delivery 
            </summary>
            <param name="purchaseOrderId">The Id of the Purchase Order related to the delivery</param>
            <param name="newDelivery">New delivery data</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.Put(System.Guid,JuhinAPI.DTOs.DeliveryCreationDTO)">
            <summary>
            Edits the delivery data requested by Id
            </summary>
            <param name="id"></param>
            <param name="updatedDelivery"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DeliveryController.Delete(System.Guid,System.Guid)">
            <summary>
            
            </summary>
            <param name="deliveryId"></param>
            <param name="purchaseOrderId"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all documents
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.GetDocumentById(System.Guid)">
            <summary>
            Gets the specific document by Guid Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.GetDeliveryDocuments(System.Guid)">
            <summary>
            Gets the specific document by Guid Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.Post(JuhinAPI.DTOs.DocumentCreationDTO)">
            <summary>
            Posts the document file to file storage service
            </summary>
            <param name="newDocument"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.Put(System.Guid,JuhinAPI.DTOs.DocumentCreationDTO)">
            <summary>
            Edits the document by Guid Id
            </summary>
            <param name="id"></param>
            <param name="updatedDocument"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.DocumentController.Delete(System.Guid)">
            <summary>
            Removes the document by Guid Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ForwarderController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all forwarders
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ForwarderController.GetForwarderById(System.Int32)">
            <summary>
            Gets the forwarder info by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ForwarderController.Post(JuhinAPI.DTOs.ForwarderCreationDTO)">
            <summary>
            Posts the new forwarder data
            </summary>
            <param name="newForwarder"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ForwarderController.Put(System.Int32,JuhinAPI.DTOs.ForwarderCreationDTO)">
            <summary>
            Edits the forwarder info by Id
            </summary>
            <param name="id"></param>
            <param name="updatedForwarder"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ForwarderController.Delete(System.Int32)">
            <summary>
            Removes the forwarder data by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all the components
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.GetItem(System.Guid)">
            <summary>
            Gets the component info by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.GetItemByVendor(System.Guid)">
            <summary>
            Gets the component info by Id
            </summary>
            <param name="vendorId"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.Post(JuhinAPI.DTOs.ItemCreationDTO)">
            <summary>
            Posts the new component
            </summary>
            <param name="newItem"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.Put(System.Guid,JuhinAPI.DTOs.ItemCreationDTO)">
            <summary>
            Edits the existing component info by Id
            </summary>
            <param name="id"></param>
            <param name="updatedItem"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.ItemController.Delete(System.Guid)">
            <summary>
            Removes the component by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PackedItemController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets all the items related to the deliveries
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PackedItemController.GetById(System.Guid)">
            <summary>
            Gets specific packed item related to delivery by packed item Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PackedItemController.Post(JuhinAPI.DTOs.PackedItemCreationDTO)">
            <summary>
            Posts the packed item related to delivery
            </summary>
            <param name="newPackedItem"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PackedItemController.Put(System.Guid,JuhinAPI.DTOs.PackedItemCreationDTO)">
            <summary>
            Edits the packed item related to delivery by Id
            </summary>
            <param name="id"></param>
            <param name="updatedPackedItem"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PackedItemController.Delete(System.Guid)">
            <summary>
            Removes the packed item related to delivery
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PalletController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets all the pallets types
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PalletController.GetById(System.Int32)">
            <summary>
            Gets the pallet type by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PalletController.Post(JuhinAPI.DTOs.PalletCreationDTO)">
            <summary>
            Adds new pallet type
            </summary>
            <param name="palletCreated"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PalletController.Put(System.Int32,JuhinAPI.DTOs.PalletCreationDTO)">
            <summary>
            Edits specific pallet type by Id
            </summary>
            <param name="id"></param>
            <param name="updatedPallet"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PalletController.Delete(System.Int32)">
            <summary>
            Removes the pallet type by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PurchaseOrderController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all purchase orders
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PurchaseOrderController.GetById(System.Guid)">
            <summary>
            Gets the purchase order by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PurchaseOrderController.Post(JuhinAPI.DTOs.PurchaseOrderCreationDTO)">
            <summary>
            Adds new purchase order related to specific vendor
            </summary>
            <param name="purchaseOrderCreation"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PurchaseOrderController.Put(System.Guid,JuhinAPI.DTOs.PurchaseOrderCreationDTO)">
            <summary>
            Edits specific purchase order by Id
            </summary>
            <param name="id"></param>
            <param name="orderCreation"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.PurchaseOrderController.Delete(System.Guid)">
            <summary>
            Removes the purchase order by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.RootController.Get">
            <summary>
            Gets the endpoints links
            </summary>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.StatusController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list oif all statuses
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.StatusController.GetStatusById(System.Int32)">
            <summary>
            Gets the status info by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.StatusController.Post(JuhinAPI.DTOs.StatusCreationDTO)">
            <summary>
            Adds new status
            </summary>
            <param name="newStatus"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.StatusController.Put(System.Int32,JuhinAPI.DTOs.StatusCreationDTO)">
            <summary>
            Edits existing status info
            </summary>
            <param name="id"></param>
            <param name="updatedStatus"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.StatusController.Delete(System.Int32)">
            <summary>
            Removes the existing status
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all subscriptions
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.GetSubscriptionById(System.Guid)">
            <summary>
            Gets the information about specific subscription by Id
            </summary>
            <param name="id">The Id of subscription</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.GetUserSubscriptions(System.String)">
            <summary>
            Gets the list of user subscriptions by user Id
            </summary>
            <param userId="userId">The Id of the user</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.CheckSubscription(System.String,System.Guid)">
            <summary>
            Checks if delivery is subscribed by user
            </summary>
            <param userId="userId">The Id of the user</param>
            <param deliveryId="deliveryId">The Id of the delivery</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.Post(JuhinAPI.DTOs.SubscriptionCreationDTO)">
            <summary>
            Adds new subscription
            </summary>
            <param name="newSubscription"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.Put(System.Guid,JuhinAPI.DTOs.SubscriptionCreationDTO)">
            <summary>
            Edits the existing subscription data
            </summary>
            <param name="id"></param>
            <param name="updatedSubscription"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.Delete(System.Guid)">
            <summary>
            Removes the subscription by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.SubscriptionController.DeleteCurrentSubscription(JuhinAPI.DTOs.SubscriptionCreationDTO)">
            <summary>
            Removes user subscriptions by userId and deliveryId
            </summary>
            <param userId="userId">User Id string/Guid</param>
            <param deliveryId="deliveryId">Delivery Id Guid</param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.UnitController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all units of measure 
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.UnitController.GetById(System.Int32)">
            <summary>
            Gets the unit by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.UnitController.Post(JuhinAPI.DTOs.UnitCreationDTO)">
            <summary>
            Adds new unit
            </summary>
            <param name="newUnit"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.UnitController.Put(System.Int32,JuhinAPI.DTOs.UnitCreationDTO)">
            <summary>
            Edits existing unit data by Id
            </summary>
            <param name="id"></param>
            <param name="updatedUnit"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.UnitController.Delete(System.Int32)">
            <summary>
            Removes the existing unit
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.VendorController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all vendors/suppliers
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.VendorController.GetVendorsId(System.Guid)">
            <summary>
            Gets the vendor data by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.VendorController.Post(JuhinAPI.DTOs.VendorCreationDTO)">
            <summary>
            Adds new vendor data
            </summary>
            <param name="vendorCreation"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.VendorController.Put(System.Guid,JuhinAPI.DTOs.VendorCreationDTO)">
            <summary>
            Edits existing vendor data by Id
            </summary>
            <param name="id"></param>
            <param name="vendorCreation"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.VendorController.Delete(System.Guid)">
            <summary>
            Removes the existing vendor data
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of all warehouses
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseController.GetById(System.Int32)">
            <summary>
            Gets the warehouse by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseController.Post(JuhinAPI.DTOs.WarehouseCreationDTO)">
            <summary>
            Adds new warehouse
            </summary>
            <param name="newWarehouse"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseController.Put(System.Int32,JuhinAPI.DTOs.WarehouseCreationDTO)">
            <summary>
            Edits existing warehouse data
            </summary>
            <param name="id"></param>
            <param name="updatedWarehouse"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseController.Delete(System.Int32)">
            <summary>
            Removes the existing warehouse data
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Get(JuhinAPI.DTOs.PaginationDTO)">
            <summary>
            Gets the list of information about the warehouse volume (qty of pallets) in specific point of time 
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Get(System.Guid)">
            <summary>
            Gets the info about warehouse volume by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Get(System.DateTime)">
            <summary>
            Gets the warehouse volume by given time value
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Post(JuhinAPI.DTOs.WarehouseVolumeCreationDTO)">
            <summary>
            Adds new warehouse volume in time (should be added once per 4 hours)
            </summary>
            <param name="newWarehouseVolume"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Put(System.Guid,JuhinAPI.DTOs.WarehouseVolumeCreationDTO)">
            <summary>
            Edits the warehouse volume in time by Id
            </summary>
            <param name="id"></param>
            <param name="updatedWarehouseVolume"></param>
            <returns></returns>
        </member>
        <member name="M:JuhinAPI.Controllers.WarehouseVolumeInTimeController.Delete(System.Guid)">
            <summary>
            Removes the volume by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
